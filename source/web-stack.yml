version: "3.7"
services:
  whoami:
    image: "traefik/whoami"
    networks:
      - traefik
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.http.routers.whoami-http.entrypoints=web
        - traefik.http.routers.whoami-http.rule=Host(`whoami.${LOCAL_DOMAIN}`)
        - traefik.http.routers.whoami.entrypoints=websecure
        - traefik.http.routers.whoami.rule=Host(`whoami.${LOCAL_DOMAIN}`)
        - traefik.http.routers.whoami-http.middlewares=whoami-https@docker
        - traefik.http.middlewares.whoami-https.redirectscheme.scheme=https
        - traefik.http.routers.whoami.tls=true
        - traefik.http.routers.whoami.tls.certresolver=le-dns
        - traefik.http.services.whoami.loadbalancer.server.port=80
  dashy:
    image: "lissy93/dashy:latest"
    networks:
      - traefik
      - traefik-public
    volumes:
      - dashyconfig:/app/public/
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.dashy-http.entrypoints=web
        - traefik.http.routers.dashy-http.rule=Host(`dashy.${LOCAL_DOMAIN}`)
        - traefik.http.routers.dashy.entrypoints=websecure
        - traefik.http.routers.dashy.rule=Host(`dashy.${LOCAL_DOMAIN}`)
        - traefik.http.routers.dashy-http.middlewares=dashy-https@docker
        - traefik.http.middlewares.dashy-https.redirectscheme.scheme=https
        - traefik.http.routers.dashy.tls=true
        - traefik.http.routers.dashy.tls.certresolver=le-dns
        - traefik.http.services.dashy.loadbalancer.server.port=80
networks:
  traefik-public:
    external: true
  traefik:
    external: true
volumes:
  dashyconfig:
    driver: local
