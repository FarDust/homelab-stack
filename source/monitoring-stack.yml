version: "3.9"
networks:
  traefik-public:
    external: true
  traefik:
    external: true
services:
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    environment:
      - NODE_ID={{.Node.ID}}
    networks:
      - traefik
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - node_exporter:/etc/node-exporter
    command:
      - "--path.sysfs=/host/sys"
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--collector.textfile.directory=/etc/node-exporter/"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
      - "--no-collector.ipvs"
    deploy:
      mode: global
      resources:
        limits:
          cpus: "0.1"
          memory: 128M
        reservations:
          memory: 64M
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=false"
        - "traefik.swarm.network=traefik"
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    hostname: "{{.Node.ID}}"
    networks:
      - traefik
    command:
      - "--logtostderr"
      - "--docker_only=true"
      - "--housekeeping_interval=15s"
      - "--store_container_labels=true"
      - "--storage_driver=redis"
      - "--storage_driver_host=${REDIS_HOST:?err}:${REDIS_PORT:?err}"
    volumes:
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /sys:/sys:ro
      - /var/run:/var/run:ro
      - /:/rootfs:ro
      - /sys/fs/cgroup:/cgroup:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /etc/localtime:/etc/localtime:ro
    deploy:
      mode: global
      update_config:
        order: start-first
      placement:
        constraints:
         - node.platform.os == linux
         - node.platform.arch != aarch64
      labels:
        - "traefik.enable=true"
        - "traefik.swarm.network=traefik"
        - "traefik.http.routers.cadvisor.service=cadvisor@swarm"
        - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.${LOCAL_DOMAIN:-traefik.me}`)"
        - "traefik.http.routers.cadvisor.entrypoints=websecure"
        - "traefik.http.routers.cadvisor.tls=true"
        - "traefik.http.routers.cadvisor.tls.certresolver=le-dns"
        - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
      resources:
        limits:
          memory: 512M
        reservations:
          cpus: "0.05"
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8080/healthz || exit 1
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 30s
  renderer:
    image: grafana/grafana-image-renderer:latest
    networks:
      - traefik
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
  watchtower:
    image: containrrr/watchtower
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets:
      - source: watchtower_auth_token
    command:
      --schedule '0 2 * * *'
      --cleanup
      --stop-timeout 30s
      --http-api-metrics
    environment:
      - TZ=America/Santiago
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_HTTP_API_TOKEN?err}
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.platform.os == linux]
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
      labels:
        - "traefik.enable=false"
  # netdata:
  #   image: netdata/netdata:edge
  #   pid: host
  #   hostname: "{{.Node.ID}}"
  #   networks:
  #     - traefik
  #   cap_add:
  #     - SYS_PTRACE
  #     - SYS_ADMIN
  #   security_opt:
  #     - apparmor:unconfined
  #   environment:
  #     - NETDATA_CLAIM_TOKEN=${NETDATA_TOKEN?err}
  #     - NETDATA_CLAIM_URL=https://app.netdata.cloud
  #     - NETDATA_CLAIM_ROOMS=${NETDATA_CLAIM_ROOMS?err}
  #   volumes:
  #     - netdataconfig:/etc/netdata
  #     - netdatalib:/var/lib/netdata
  #     - netdatacache:/var/cache/netdata
  #     - /etc/passwd:/host/etc/passwd:ro
  #     - /etc/group:/host/etc/group:ro
  #     - /etc/localtime:/etc/localtime:ro
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /etc/os-release:/host/etc/os-release:ro
  #     - /etc/hostname:/etc/hostname:ro
  #     - /var/log:/host/var/log:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   deploy:
  #     mode: global
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #       window: 120s
  #     placement:
  #       constraints: [node.platform.os == linux]
  #     resources:
  #       limits:
  #         memory: 512M
  #       reservations:
  #         memory: 128M
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.netdata.rule=Host(`netdata.${LOCAL_DOMAIN:-home}`)"
  #       - "traefik.http.routers.netdata.entrypoints=web"
  #       - "traefik.http.routers.netdata.service=netdata@swarm"
  #       - "traefik.http.services.netdata.loadbalancer.server.port=19999"
  #       - "traefik.swarm.network=traefik"
volumes:
  netdataconfig: {}
  netdatalib: {}
  netdatacache: {}
  node_exporter: {}
secrets:
  watchtower_auth_token:
    file: ../secrets/watchtower/auth_token
